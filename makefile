# Compiler
CXX = g++

# Target for the main program
MAIN_TARGET = a.out

# Target for the fuzzer
FUZZER_TARGET = fuzzer

# SMT test file generated by fuzzer
FUZZER_OUTPUT = fuzzer_test.smt2

# Result files
RES1 = res1
RES2 = res2

# Default rule: Run everything in order
all: compile_main compile_fuzzer run_fuzzer run_comparisons

# Compile main program (main.cpp)
compile_main:
	$(CXX) main.cpp

# Compile fuzzer (fuzzer.cpp)
compile_fuzzer:
	$(CXX) -o $(FUZZER_TARGET) fuzzer.cpp

# Run the fuzzer to generate the SMT test file
run_fuzzer:
	./$(FUZZER_TARGET) > $(FUZZER_OUTPUT)

# Run z3 and the main program, compare outputs
run_comparisons:
	z3 $(FUZZER_OUTPUT) > $(RES1) && ./$(MAIN_TARGET) $(FUZZER_OUTPUT) > $(RES2) && cmp $(RES1) $(RES2); echo $$?

# Clean rule: Remove generated files
clean:
	rm -f $(MAIN_TARGET) $(FUZZER_TARGET) $(FUZZER_OUTPUT) $(RES1) $(RES2)
